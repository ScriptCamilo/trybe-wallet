{"version":3,"sources":["pages/Login/styles.module.css","pages/Wallet/components/Header/styles.module.css","components/Input/styles.module.css","components/Select/styles.module.css","pages/Wallet/components/Table/table.module.css","components/Button/styles.module.css","pages/Wallet/components/Forms/styles.module.css","routes/styles.module.css","serviceWorker.js","services/awesomeApi.js","actions/user.js","actions/wallet.js","components/Input/index.jsx","components/Button/index.jsx","pages/Login/index.jsx","actions/index.js","helpers/totalExpenses.js","pages/Wallet/components/Header/index.jsx","helpers/inputData.js","components/Select/components/Option/index.jsx","components/Select/index.jsx","pages/Wallet/components/Forms/index.jsx","pages/Wallet/components/Table/index.jsx","pages/Wallet/index.jsx","routes/index.jsx","App.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","fetchAwesomeApi","a","fetch","response","json","currencies","addCurrencies","payload","type","currenciesError","Input","this","props","labelName","placeholder","dataTestid","name","onChange","value","checked","htmlFor","className","styles","inputBox","inputField","id","data-testid","event","React","Component","defaultProps","Button","children","disabled","onClick","dataTestId","button","undefined","Login","handleChange","bind","handleSubmit","state","email","password","isValidate","isEmail","test","length","target","setState","validateUser","preventDefault","dispatchUser","history","push","isPwd","container","logo","loginSection","connect","dispatch","user","totalExpenses","expenses","totalExpense","reduce","total","currency","parseFloat","exchangeRates","ask","toFixed","Header","isLoading","console","log","wallet","inputs","selects","select","options","text","Option","Select","selectBox","selectField","map","option","key","Forms","getCurrenciesOptions","getState","description","method","tag","currencie","code","addExpense","formField","input","data","addExpensesThunk","Table","handleDelete","deleteExpense","table","expense","index","exchangeRate","currencyName","split","cambio","convertedValue","buttons","Wallet","fetchData","Object","values","filter","codein","routes","path","exact","component","route","App","INITIAL_STATE","error","lastId","newExpenses","concat","deletedExpense","find","rootReducers","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b855dd24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__QDtPk\",\"logo\":\"styles_logo__XVMrR\",\"loginSection\":\"styles_loginSection__2X9L6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__oepDj\",\"email\":\"styles_email__3GV55\",\"expenses\":\"styles_expenses__1ZRSQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBox\":\"styles_inputBox__nUoT-\",\"inputField\":\"styles_inputField__h5SI7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectBox\":\"styles_selectBox__QHjAd\",\"selectField\":\"styles_selectField__38Av6\",\"inputField\":\"styles_inputField__oN7Zo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table_table__38_oH\",\"buttons\":\"table_buttons__2V2Qx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__3pqej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formField\":\"styles_formField__2PflU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2MJvq\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default async function fetchAwesomeApi() {\n  const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const currencies = await response.json();\n\n  return currencies;\n}\n","export const USER_LOGIN = 'RECEIVED_USER_LOGIN';\n\nexport const getUserSuccess = (payload) => ({\n  type: USER_LOGIN,\n  payload,\n});\n","export const CURRENCIES = 'REQUEST_CURRENCIES';\nexport const CURRENCIES_ERROR = 'RECEIVED_CURRENCIES_ERROR';\nexport const CURRENCIES_SUCCESS = 'RECEIVED_CURRENCIES';\nexport const ADD_EXPENSES_SUCCESS = 'ADD_EXPENSES';\nexport const DELETE_EXPENSES_SUCCESS = 'DELETE_EXPENSES';\n\nexport const requestCurrencies = () => ({\n  type: CURRENCIES,\n});\n\nexport const currenciesSuccess = (payload) => ({\n  type: CURRENCIES_SUCCESS,\n  payload,\n});\n\nexport const addCurrencies = (payload) => ({\n  type: ADD_EXPENSES_SUCCESS,\n  payload,\n});\n\nexport const currenciesError = (payload) => ({\n  type: CURRENCIES_ERROR,\n  payload,\n});\n","import React from 'react';\nimport { string, func, bool } from 'prop-types';\n\nimport styles from './styles.module.css';\n\nclass Input extends React.Component {\n  render() {\n    const {\n      labelName,\n      placeholder,\n      dataTestid,\n      name,\n      onChange,\n      type,\n      value,\n      checked,\n    } = this.props;\n\n    return (\n      <label htmlFor={ name } className={ styles.inputBox }>\n        {labelName}\n        <input\n          className={ styles.inputField }\n          id={ name }\n          value={ value }\n          data-testid={ dataTestid }\n          name={ name }\n          onChange={ (event) => onChange(event) }\n          type={ type }\n          placeholder={ placeholder }\n          checked={ checked }\n        />\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  value: string.isRequired,\n  onChange: func.isRequired,\n  name: string.isRequired,\n  dataTestid: string,\n  placeholder: string,\n  type: string,\n  labelName: string,\n  checked: bool,\n};\n\nInput.defaultProps = {\n  dataTestid: '',\n  placeholder: '',\n  type: 'text',\n  labelName: '',\n  checked: false,\n};\n\nexport default Input;\n","import React from 'react';\nimport { number, bool, func, string, node } from 'prop-types';\n\nimport styles from './styles.module.css';\n\nfunction Button(props) {\n  const {\n    children,\n    disabled,\n    onClick,\n    dataTestId,\n    id,\n  } = props;\n\n  return (\n    <button\n      data-testid={ dataTestId }\n      className={ styles.button }\n      type=\"submit\"\n      disabled={ disabled }\n      onClick={ (event) => (id >= 0 ? onClick(id) : onClick(event)) }\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  children: node.isRequired,\n  // children: arrayOf(oneOfType([string, object])).isRequired,\n  onClick: func.isRequired,\n  disabled: bool,\n  dataTestId: string,\n  id: number,\n};\n\nButton.defaultProps = {\n  dataTestId: '',\n  disabled: false,\n  id: undefined,\n};\n\nexport default Button;\n","import React from 'react';\nimport { func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FiArrowRight } from 'react-icons/fi';\nimport { GiWallet } from 'react-icons/gi';\n\nimport { getUser } from '../../actions';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport styles from './styles.module.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n      isValidate: {\n        email: false,\n        password: false,\n      },\n    };\n  }\n\n  // https://www.horadecodar.com.br/2020/09/13/como-validar-email-com-javascript/\n  validateUser(value, isEmail) {\n    const regex = /\\S+@\\S+\\.\\S+/;\n    const minimumLength = 6;\n\n    if (isEmail === 'email') return regex.test(value);\n    return value.length >= minimumLength;\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState(({ isValidate }) => ({\n      [name]: value,\n      isValidate: {\n        ...isValidate,\n        [name]: this.validateUser(value, name),\n      },\n    }));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { email, password } = this.state;\n    const { dispatchUser, history } = this.props;\n\n    dispatchUser({ email, password });\n    this.setState({ email: '', password: '' });\n    history.push('/carteira');\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      isValidate: { email: isEmail, password: isPwd },\n    } = this.state;\n\n    return (\n      <main className={ styles.container }>\n        <GiWallet className={ styles.logo } />\n\n        <form className={ styles.loginSection }>\n          <Input\n            value={ email }\n            dataTestid=\"email-input\"\n            name=\"email\"\n            onChange={ (event) => this.handleChange(event) }\n            type=\"text\"\n            placeholder=\"Email\"\n          />\n\n          <Input\n            value={ password }\n            dataTestid=\"password-input\"\n            name=\"password\"\n            onChange={ (event) => this.handleChange(event) }\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n\n          <Button\n            disabled={ !(isEmail && isPwd) }\n            onClick={ this.handleSubmit }\n          >\n            <span>ENTRAR</span>\n            {' '}\n            <FiArrowRight />\n          </Button>\n        </form>\n      </main>\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatchUser: func.isRequired,\n  history: shape({\n    push: func.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchUser: (payload) => dispatch(getUser(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import fetchAwesomeApi from '../services/awesomeApi';\nimport { getUserSuccess } from './user';\nimport {\n  addCurrencies,\n  currenciesError,\n  currenciesSuccess,\n  requestCurrencies,\n} from './wallet';\n\nexport const getUser = (user) => (dispatch) => {\n  dispatch(getUserSuccess(user));\n};\n\nexport const getCurrenciesThunk = () => async (dispatch) => {\n  try {\n    const data = await fetchAwesomeApi();\n    const currencies = Object.values(data).filter((currencie) => (\n      currencie.codein !== 'BRLT'\n    ));\n\n    dispatch(currenciesSuccess(currencies));\n  } catch (error) {\n    console.log(error);\n    dispatch(currenciesError('Erro ao buscar currencies'));\n  }\n};\n\nexport const addExpensesThunk = (state) => async (dispatch) => {\n  dispatch(requestCurrencies());\n  try {\n    const data = await fetchAwesomeApi();\n    const payload = {\n      ...state,\n      exchangeRates: data,\n    };\n    dispatch(addCurrencies(payload));\n  } catch (error) {\n    console.log(error);\n    dispatch(currenciesError('Erro ao buscar currencies'));\n  }\n};\n","function totalExpenses(expenses) {\n  if (!expenses.length) return 0;\n\n  const totalExpense = expenses.reduce((total, payload) => {\n    const { currency, value } = payload;\n    const ask = parseFloat(payload.exchangeRates[currency].ask);\n    const expense = value * ask;\n    const newTotal = total + expense;\n\n    return newTotal;\n  }, 0);\n\n  return parseFloat(totalExpense.toFixed(2));\n}\n\nexport default totalExpenses;\n","import React from 'react';\nimport { string, arrayOf, object, shape, bool } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport totalExpenses from '../../../../helpers/totalExpenses';\n\nimport styles from './styles.module.css';\n\nclass Header extends React.Component {\n  render() {\n    const { user: { email }, expenses, isLoading } = this.props;\n    console.log(expenses);\n\n    return (\n      <header className={ styles.container }>\n        <h1>TRYBEWALLET</h1>\n\n        <div>\n          <p className={ styles.email } data-testid=\"email-field\">{email}</p>\n          <p className={ styles.expenses } data-testid=\"total-field\">\n            {isLoading ? 'Loading...' : `Despesa total: R$${totalExpenses(expenses)}`}\n            <span data-testid=\"header-currency-field\"> BRL</span>\n          </p>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  isLoading: bool.isRequired,\n  expenses: arrayOf(object.isRequired).isRequired,\n  user: shape({\n    email: string.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isLoading: state.wallet.isLoading,\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Header);\n","export const inputs = [\n  {\n    dataTestid: '',\n    name: 'value',\n    type: 'number',\n    labelName: 'Valor:',\n  },\n  {\n    dataTestid: '',\n    name: 'description',\n    labelName: 'Descrição:',\n  },\n];\n\nexport const selects = [\n  {\n    select: '',\n    name: 'currency',\n    labelName: 'Moeda:',\n    options: undefined,\n  },\n  {\n    select: '',\n    name: 'method',\n    labelName: 'Método de pagamento:',\n    options: [\n      {\n        text: 'Dinheiro',\n        value: 'Dinheiro',\n      },\n      {\n        text: 'Cartão de crédito',\n        value: 'Cartão de crédito',\n      },\n      {\n        text: 'Cartão de débito',\n        value: 'Cartão de débito',\n      },\n    ],\n  },\n  {\n    select: '',\n    name: 'tag',\n    labelName: 'Tag:',\n    options: [\n      {\n        text: 'Alimentação',\n        value: 'Alimentação',\n      },\n      {\n        text: 'Lazer',\n        value: 'Lazer',\n      },\n      {\n        text: 'Trabalho',\n        value: 'Trabalho',\n      },\n      {\n        text: 'Transporte',\n        value: 'Transporte',\n      },\n      {\n        text: 'Saúde',\n        value: 'Saúde',\n      },\n    ],\n  },\n];\n","import React from 'react';\nimport { string } from 'prop-types';\n\nclass Option extends React.Component {\n  render() {\n    const { value, text } = this.props;\n    return (\n      <option value={ value }>{text}</option>\n    );\n  }\n}\n\nOption.propTypes = {\n  value: string.isRequired,\n  text: string.isRequired,\n};\n\nexport default Option;\n","import React from 'react';\nimport PropTypes, { string, func, arrayOf } from 'prop-types';\n\nimport Option from './components/Option';\n\nimport styles from './styles.module.css';\n\nclass Select extends React.Component {\n  render() {\n    const {\n      select,\n      name,\n      labelName,\n      options,\n      value,\n      onChange,\n    } = this.props;\n\n    return (\n      <label htmlFor={ name } className={ styles.selectBox }>\n        {labelName}\n        <select\n          className={ styles.selectField }\n          data-testid={ select }\n          id={ name }\n          name={ name }\n          value={ value }\n          onChange={ onChange }\n        >\n          {options.map((option) => <Option key={ option.value } { ...option } />)}\n        </select>\n      </label>\n    );\n  }\n}\n\nSelect.propTypes = {\n  select: string.isRequired,\n  name: string.isRequired,\n  labelName: string.isRequired,\n  options: arrayOf(PropTypes.object).isRequired,\n  value: string.isRequired,\n  onChange: func.isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes, { arrayOf, func } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport styles from './styles.module.css';\nimport { inputs, selects } from '../../../../helpers/inputData';\n\nimport Input from '../../../../components/Input';\nimport Select from '../../../../components/Select';\nimport Button from '../../../../components/Button';\nimport { addExpensesThunk } from '../../../../actions';\n\nclass Forms extends React.Component {\n  constructor() {\n    super();\n\n    this.getCurrenciesOptions = this.getCurrenciesOptions.bind(this);\n    this.getState = this.getState.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n  }\n\n  getCurrenciesOptions() {\n    const { currencies } = this.props;\n\n    return currencies.map((currencie) => ({\n      text: currencie.code,\n      value: currencie.code,\n    }));\n  }\n\n  getState() {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    } = this.state;\n\n    return {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    };\n  }\n\n  handleChange({ target }) {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { addExpense } = this.props;\n    addExpense(this.state);\n    this.setState({\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    });\n  }\n\n  render() {\n    return (\n      <form className={ styles.formField }>\n        {\n          inputs.map((input) => {\n            const { [input.name]: value } = this.getState();\n            return (\n              <Input\n                key={ input.name }\n                { ... input }\n                value={ value }\n                onChange={ this.handleChange }\n              />\n            );\n          })\n        }\n\n        {\n          selects.map((select) => {\n            const { [select.name]: value } = this.getState();\n            let { options } = select;\n\n            if (!options) {\n              options = this.getCurrenciesOptions();\n            }\n\n            return (\n              <Select\n                key={ select.text }\n                { ...select }\n                options={ options }\n                value={ value }\n                onChange={ this.handleChange }\n              />\n            );\n          })\n        }\n        <Button\n          onClick={ this.handleSubmit }\n        >\n          Adicionar despesa\n        </Button>\n      </form>\n    );\n  }\n}\n\nForms.propTypes = {\n  currencies: arrayOf(PropTypes.object).isRequired,\n  addExpense: func.isRequired,\n};\n\nconst mapDisptachToProps = (dispatch) => ({\n  addExpense: (state) => dispatch(addExpensesThunk(state)),\n});\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nexport default connect(mapStateToProps, mapDisptachToProps)(Forms);\n","import React from 'react';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\nimport { arrayOf, object, func } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport styles from './table.module.css';\n\nimport Button from '../../../../components/Button';\n\nclass Table extends React.Component {\n  constructor() {\n    super();\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleDelete(id) {\n    const { deleteExpense } = this.props;\n    deleteExpense(id);\n  }\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <table className={ styles.table }>\n        <tr>\n          <th>Valor</th>\n          <th>Descrição</th>\n          <th>Tag</th>\n          <th>Método de pagamento</th>\n          <th>Moeda</th>\n          <th>Câmbio utilizado</th>\n          <th>Valor convertido</th>\n          <th>Moeda de conversão</th>\n          <th>Editar/Excluir</th>\n        </tr>\n        {\n          expenses.map((expense, index) => {\n            const { value, currency } = expense;\n            const exchangeRate = expense.exchangeRates[currency];\n            const currencyName = exchangeRate.name.split('/')[0];\n            const cambio = parseFloat(exchangeRate.ask);\n            const convertedValue = value * cambio;\n\n            return (\n              <tr key={ index }>\n                <td>{expense.value}</td>\n                <td>{expense.description}</td>\n                <td>{expense.tag}</td>\n                <td>{expense.method}</td>\n                <td>{currencyName}</td>\n                <td>{cambio.toFixed(2)}</td>\n                <td>{convertedValue.toFixed(2)}</td>\n                <td>Real</td>\n                <td className={ styles.buttons }>\n                  {/* <Button><RiEdit2Line /></Button> */}\n                  <Button\n                    id={ expense.id }\n                    onClick={ this.handleDelete }\n                    dataTestId=\"delete-btn\"\n                  >\n                    <RiDeleteBin5Line />\n                  </Button>\n                </td>\n              </tr>\n            );\n          })\n        }\n      </table>\n    );\n  }\n}\n\nTable.propTypes = {\n  expenses: arrayOf(object.isRequired).isRequired,\n  deleteExpense: func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteExpense: (payload) => dispatch({ type: 'DELETE_EXPENSES', payload }),\n});\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from 'react';\nimport { func } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getCurrenciesThunk } from '../../actions';\n\nimport Header from './components/Header';\nimport Forms from './components/Forms';\nimport Table from './components/Table';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { fetchData } = this.props;\n    fetchData();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Forms />\n        <Table />\n      </>\n    );\n  }\n}\n\nWallet.propTypes = {\n  fetchData: func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchData: () => dispatch(getCurrenciesThunk()),\n});\n\nexport default connect(null, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { bool, shape } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Login from '../pages/Login';\nimport Wallet from '../pages/Wallet';\n\nimport styles from './styles.module.css';\n\nconst routes = [\n  {\n    path: '/',\n    exact: true,\n    component: Login,\n  },\n  {\n    path: '/carteira',\n    exact: true,\n    component: Wallet,\n  },\n];\n\nfunction Routes() {\n  return (\n    <main className={ styles.container }>\n      <Switch>\n        {routes.map((route, index) => (\n          <Route key={ index } { ...route } />\n        ))}\n      </Switch>\n    </main>\n  );\n}\n\nRoutes.propTypes = {\n  wallet: shape({\n    isLoading: bool.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => state;\n\nexport default connect(mapStateToProps, null)(Routes);\n","import React from 'react';\n\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import { USER_LOGIN } from '../actions/user';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nfunction user(state = INITIAL_STATE, { type, payload }) {\n  switch (type) {\n  case USER_LOGIN:\n    return {\n      ...state,\n      ...payload,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default user;\n","import {\n  CURRENCIES,\n  CURRENCIES_SUCCESS,\n  ADD_EXPENSES_SUCCESS,\n  CURRENCIES_ERROR,\n  DELETE_EXPENSES_SUCCESS,\n} from '../actions/wallet';\n\nimport totalExpenses from '../helpers/totalExpenses';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  totalExpense: 0,\n  isLoading: false,\n  error: null,\n};\n\nfunction wallet(state = INITIAL_STATE, { type, payload }) {\n  switch (type) {\n  case CURRENCIES: {\n    const { expenses } = state;\n    const totalExpense = totalExpenses(expenses);\n    return { ...state, isLoading: true, error: null, totalExpense };\n  }\n  case CURRENCIES_SUCCESS:\n    return {\n      ...state,\n      isLoading: false,\n      error: null,\n      currencies: payload,\n    };\n  case ADD_EXPENSES_SUCCESS: {\n    const index = state.expenses.length;\n    const lastId = state.expenses[index] ? state.expenses[index].id : index - 1;\n    payload.id = lastId ? index : lastId + 1;\n\n    const newExpenses = state.expenses.concat(payload);\n    const totalExpense = totalExpenses(newExpenses);\n\n    return {\n      ...state,\n      isLoading: false,\n      error: null,\n      expenses: newExpenses,\n      totalExpense,\n    };\n  }\n  case CURRENCIES_ERROR:\n    return { ...state, error: payload };\n  case DELETE_EXPENSES_SUCCESS: {\n    const deletedExpense = state.expenses.find(({ id }) => id === payload);\n    const newExpenses = state.expenses.filter(({ id }) => id !== payload);\n    const { value, currency } = deletedExpense;\n    const exchangeRate = deletedExpense.exchangeRates[currency];\n    const cambio = parseFloat(exchangeRate.ask);\n    const convertedValue = value * cambio;\n    const totalExpense = parseFloat((state.totalExpense - convertedValue).toFixed(2));\n\n    return { ...state, expenses: newExpenses, totalExpense };\n  }\n  default:\n    return { ...state };\n  }\n}\n\nexport default wallet;\n","import { combineReducers } from 'redux';\n\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducers = combineReducers({ user, wallet });\n\nexport default rootReducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/global.css';\nimport App from './App';\n\nimport store from './store';\n\nReactDOM.render(\n  <Router>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}